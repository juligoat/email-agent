[project]
name = "teton-email-agent"
version = "0.0.1"

description = "teton.ai tech project"
authors = [{ name = "Julian Irigoyen", email = "juli.irigoyen96@gmail.com" }]
readme = "README.md"
requires-python = ">=3.10,<4.0"
dependencies = [
    "aiocache>=0.12.3",
    "aiohttp>=3.12.13",
    "async-timeout>=5.0.1",
    "click>=8.2.1",
    "duckduckgo-search>=8.0.4",
    "factory-boy>=3.3.3",
    "faker>=37.4.0",
    "fastapi==0.104.1",
    "google-api-python-client==2.108.0",
    "google-auth==2.23.4",
    "google-auth-oauthlib==1.1.0",
    "groq>=0.4.0",
    "httpx>=0.28.1",
    "langchain>=0.0.27",
    "langchain-core>=0.2.8",
    "langchain-groq>=0.1.6",
    "langgraph>=0.1.5",
    "pandas>=2.3.0",
    "plotly>=6.1.2",
    "pydantic>=2.5.0,<3.0.0",
    "pydantic-settings>=2.1.0",
    "pypdf2>=3.0.1",
    "python-docx>=1.2.0",
    "rich>=14.0.0",
    "streamlit>=1.46.0",
    "streamlit-autorefresh>=1.0.1",
    "structlog>=25.4.0",
    "typer>=0.16.0",
    "uvicorn[standard]==0.24.0",
]

[tool.uv]
dev-dependencies = [
    "deptry",
    "ipykernel",
    "ipywidgets",
    "pre-commit",
    "pytest",
    "pytest-cookies",
    "pytest-cov",
    "ruff",
    "tox",
    "vulture",
    "pytest-cov",
    "mypy",
    ]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

# ADD THIS SECTION - This fixes the build error
[tool.hatch.build.targets.wheel]
packages = ["teton_email_agent"]

[tool.mypy]
packages = ["teton_email_agent"]
namespace_packages = true
explicit_package_bases = true
exclude = ["tests/", "build/", "dist/"]
disallow_untyped_defs = false
disallow_any_unimported = false
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "teton_email_agent.models"
ignore_errors = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = """
    --cov=teton_email_agent
    --cov-config=pyproject.toml
    --cov-report=term
    --cov-report=lcov:lcov.info
"""

[tool.ruff]
target-version = "py38"
exclude = ["vulture_whitelist.py"]
line-length = 100
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E",
    "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    # False positive on filenames
    "S105",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["teton_email_agent"]

[tool.vulture]
paths = ["teton_email_agent", "vulture_whitelist.py"]
sort_by_size = true
